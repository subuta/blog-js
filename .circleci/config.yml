# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
references:
  container_config: &container_config
    working_directory: ~/blogjs
    docker:
      # available image list: https://circleci.com/docs/2.0/circleci-images
      - image: circleci/node:9.11.1
        environment:
          TZ: /usr/share/zoneinfo/Asia/Tokyo
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: blog-js-test
          REDIS_PASSWORD: password
          NODE_ENV: test
      - image: postgres:10-alpine
        environment:
          TZ: /usr/share/zoneinfo/Asia/Tokyo
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: blog-js-test
      - image: redis:3.2.8
        environment:
          TZ: /usr/share/zoneinfo/Asia/Tokyo
          REDIS_PASSWORD: password

version: 2
jobs:
  test:
    <<: *container_config
    parallelism: 1
    steps:
      - checkout
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run test

  deploy-to-apps:
    <<: *container_config
    parallelism: 1
    steps:
      - setup_remote_docker
      - checkout
      # build the application image
      - run: docker-compose build app
      # tag image for dokku
      - run: docker tag blogjs_app:latest dokku/blogjs_app:latest
      # push image
      - run: docker save dokku/blogjs_app:latest | bzip2 | ssh root@sub-labo-apps.com -o "StrictHostKeyChecking no" -p $SSHD_PORT "bunzip2 | docker load | dokku tags:deploy blogjs_app latest"

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy-to-apps:
          requires:
            - test
          filters:
            branches:
              only: /^(master)$/
