version: '2'
services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfiles/app/Dockerfile
      args:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB
        - REDIS_PASSWORD
        - S3_BUCKET
        - IFRAMELY_ENDPOINT
        - AUTH0_API_IDENTIFIER
        - AUTH0_CLIENT_ID
        - AUTH0_AUDIENCE
        - BASE_URL
        - FB_APP_ID
        - TWITTER_SITE
        - GOOGLE_MAPS_API_KEY
    # command: npm run serve
    command: echo "do nothing :)"
    ports:
      - "3000:3000"
    # Not use env file at app build for ease of deployment.
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:password@db:5432/blog-js-development
      - IFRAMELY_ENDPOINT=http://iframely:8061
    links:
      - iframely
      - db
      - redis

  redis:
    image: redis:3.2.8
    command: >
      --appendonly yes
      --requirepass password
    environment:
      - REDIS_PASSWORD=password
    ports:
      - "6379:6379"
    volumes:
      - ./db/redis:/data

  iframely:
    build:
      context: ./Dockerfiles/iframely
      dockerfile: ./Dockerfile
      args:
        - GOOGLE_MAPS_API_KEY
        - APP_DOMAIN
    ports:
      - "8061:8061"
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=password
    volumes:
      - ./Dockerfiles/iframely/config.local.js:/iframely/config.local.js
    links:
      - redis

  db:
    image: postgres:10-alpine
    restart: always
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=blog-js-development
    volumes:
      - ./db/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  s3:
    image: minio/minio:latest
    command: "server /data"
    environment:
      - MINIO_ACCESS_KEY=DUMMY_ACCESS_KEY
      - MINIO_SECRET_KEY=DUMMY_SECRET_KEY
    ports:
      - "9000:9000"
    volumes:
      - ./db/s3/data:/data
      - ./db/s3/config:/root/.minio
